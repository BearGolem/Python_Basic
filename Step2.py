#Создать список и заполнить его элементами различных типов данных. Реализовать скрипт проверки типа
# данных каждого элемента. Использовать функцию type() для проверки типа. Элементы списка можно
# не запрашивать у пользователя, а указать явно, в программе.

sample_list = ['string', 5, True, 3.14, [1, 2, 3], (1, 2, 3), {'Бабушка': 'Пирожки', 'Красная шапочка': 'Пирожки'}]

for i in sample_list:
    print(type(i))


#Для списка реализовать обмен значений соседних элементов. Значениями обмениваются элементы с индексами 0 и 1,
# 2 и 3 и т. д. При нечётном количестве элементов последний сохранить на своём месте.
# Для заполнения списка элементов нужно использовать функцию input().

#more_lists = [1, 2, 3, 4, 5]
more_lists = [int(i) for i in input('Введите элементы через пробел: ').split()]
new_list = []

if len(more_lists) % 2 == 0:
    for i in range(0, len(more_lists)-1, 2):
        new_list.append(more_lists[i + 1])
        new_list.append(more_lists[i])
else:
    for i in range(0, len(more_lists)-2, 2):
        new_list.append(more_lists[i + 1])
        new_list.append(more_lists[i])
    new_list.append(more_lists[-1])

print(new_list)


#Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить к какому времени года относится месяц
# (зима, весна, лето, осень). Напишите решения через list и через dict.

number_month = int(input('Введите номер месяца от 1 до 12: '))

month_list = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь']
month_dict = {1: 'Январь', 2: 'Февраль', 3: 'Март', 4: 'Апрель', 5: 'Май', 6: 'Июнь', 7: 'Июль', 8: 'Август', 9: 'Сентябрь', 10: 'Октябрь', 11: 'Ноябрь', 12: 'Декабрь'}

print(month_list[number_month-1])
print(month_dict[number_month])


#Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово с новой строки.
# Строки необходимо пронумеровать. Если в слово длинное, выводить только первые 10 букв в слове.

more_words = input('Введите текст от 2х слов и больше: ')
str_number = 1

for i in more_words.split():
    if len(i) > 9:
        print('{}. {}'.format(str_number, i[:10]))
    else:
        print('{}. {}'.format(str_number, i))
    str_number += 1


#Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
# У пользователя необходимо запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы с
# одинаковыми значениями, то новый элемент с тем же значением должен разместиться после них.

fifth_element = int(input('Введите новый элемент рейтинга (целое натуральное число): '))
reiting_list = [7, 5, 3, 3, 2]

if fifth_element > reiting_list[0]:
    reiting_list.insert(0, fifth_element)
elif fifth_element < reiting_list[-1]:
    reiting_list.append(fifth_element)
else:
    for i in range(len(reiting_list)-1):
        if fifth_element < reiting_list[i] and fifth_element > reiting_list[i+1]:
            reiting_list.insert(i+1, fifth_element)
print(reiting_list)


#Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре. В кортеже должно быть два элемента —
# номер товара и словарь с параметрами (характеристиками товара: название, цена, количество, единица измерения).
# Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.



